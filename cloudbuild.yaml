steps:
  # Step 0: Pull cache from previous build
  - name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args: ['-c', 'docker pull $_AR_HOSTNAME/$_AR_PROJECT_ID/$_AR_REPOSITORY/$REPO_NAME/$_SERVICE_NAME:latest || exit 0']
    id: PullCache

  # Step 1: Build using Buildpacks with caching
  - name: gcr.io/k8s-skaffold/pack
    entrypoint: pack
    args:
      - build
      - $_AR_HOSTNAME/$_AR_PROJECT_ID/$_AR_REPOSITORY/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA
      - --builder=gcr.io/buildpacks/builder:v1
      - --network=cloudbuild
      - --path=.
      - --publish
      - --cache-image=$_AR_HOSTNAME/$_AR_PROJECT_ID/$_AR_REPOSITORY/$REPO_NAME/$_SERVICE_NAME:latest
      - --env=NEXT_PUBLIC_SUPABASE_URL=$_NEXT_PUBLIC_SUPABASE_URL
      - --env=NEXT_PUBLIC_SUPABASE_ANON_KEY=$_NEXT_PUBLIC_SUPABASE_ANON_KEY
      - --env=NEXT_PUBLIC_BASE_URL=$_NEXT_PUBLIC_BASE_URL
      - --env=NEXT_PUBLIC_LOGODEV_KEY=$_NEXT_PUBLIC_LOGODEV_KEY
      - --env=NEXT_PUBLIC_GEMINI_API_KEY=$_NEXT_PUBLIC_GEMINI_API_KEY
      - --env=NEXT_PUBLIC_MAPBOX_TOKEN=$_NEXT_PUBLIC_MAPBOX_TOKEN
      - --env=REVALIDATION_SECRET_TOKEN=$_REVALIDATION_SECRET_TOKEN
      - --env=NEXT_PUBLIC_GA_TRACKING_ID=$_NEXT_PUBLIC_GA_TRACKING_ID
    id: Buildpack

  # Step 2: Tag the image as latest for future caching 
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'tag'
      - $_AR_HOSTNAME/$_AR_PROJECT_ID/$_AR_REPOSITORY/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA
      - $_AR_HOSTNAME/$_AR_PROJECT_ID/$_AR_REPOSITORY/$REPO_NAME/$_SERVICE_NAME:latest
    id: TagLatest

  # Step 3: Push images to Artifact Registry (latest only since versioned is pushed by pack)
  - name: gcr.io/cloud-builders/docker
    args:
      - push
      - $_AR_HOSTNAME/$_AR_PROJECT_ID/$_AR_REPOSITORY/$REPO_NAME/$_SERVICE_NAME:latest
    id: PushLatest

  # Step 4: Deploy to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:slim'
    args:
      - run
      - services
      - update
      - $_SERVICE_NAME
      - '--platform=managed'
      - --image=$_AR_HOSTNAME/$_AR_PROJECT_ID/$_AR_REPOSITORY/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA
      - --labels=managed-by=gcp-cloud-build-deploy-cloud-run,commit-sha=$COMMIT_SHA,gcb-build-id=$BUILD_ID,gcb-trigger-id=$_TRIGGER_ID
      - --region=$_DEPLOY_REGION
      - --quiet
    id: Deploy
    entrypoint: gcloud

# Both the versioned and latest tagged images
images:
  - $_AR_HOSTNAME/$_AR_PROJECT_ID/$_AR_REPOSITORY/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA
  - $_AR_HOSTNAME/$_AR_PROJECT_ID/$_AR_REPOSITORY/$REPO_NAME/$_SERVICE_NAME:latest

options:
  substitutionOption: ALLOW_LOOSE
  logging: CLOUD_LOGGING_ONLY
  volumes:
    - name: 'pack-cache'
      path: '/cache'

substitutions:
  _DEPLOY_REGION: europe-west2
  _AR_HOSTNAME: europe-west2-docker.pkg.dev
  _AR_PROJECT_ID: apprenticewatch-55cb9
  _AR_REPOSITORY: cloud-run-source-deploy
  _PLATFORM: managed
  _TRIGGER_ID: c8892f2e-df9a-418e-bca0-d54efc8a090f
  _SERVICE_NAME: web-app

  # These should be securely defined in the Cloud Build Trigger UI
  _NEXT_PUBLIC_SUPABASE_URL: https://swtrxonxzchgudehqdge.supabase.co
  _NEXT_PUBLIC_SUPABASE_ANON_KEY: your-anon-key
  _NEXT_PUBLIC_BASE_URL: https://apprenticewatch.com
  _NEXT_PUBLIC_LOGODEV_KEY: your-logodev-key
  _NEXT_PUBLIC_GEMINI_API_KEY: your-gemini-key
  _NEXT_PUBLIC_MAPBOX_TOKEN: your-mapbox-token
  _REVALIDATION_SECRET_TOKEN: your-secret-token
  _NEXT_PUBLIC_GA_TRACKING_ID: G-1GKBR9HKF3

tags:
  - gcp-cloud-build-deploy-cloud-run
  - gcp-cloud-build-deploy-cloud-run-managed
  - web-app